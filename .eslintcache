[{"/Users/drew/devmountain/unit04/combo-builder-nodb/src/index.js":"1","/Users/drew/devmountain/unit04/combo-builder-nodb/src/App.js":"2","/Users/drew/devmountain/unit04/combo-builder-nodb/src/reportWebVitals.js":"3","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Main.js":"4","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Header.js":"5","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/inputDisplay.js":"6","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Builder.js":"7","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Saved.js":"8"},{"size":500,"mtime":1612139745998,"results":"9","hashOfConfig":"10"},{"size":231,"mtime":1612150308774,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612139746000,"results":"12","hashOfConfig":"10"},{"size":3480,"mtime":1612293586197,"results":"13","hashOfConfig":"10"},{"size":142,"mtime":1612150426924,"results":"14","hashOfConfig":"10"},{"size":721,"mtime":1612155054646,"results":"15","hashOfConfig":"10"},{"size":1365,"mtime":1612290082676,"results":"16","hashOfConfig":"10"},{"size":1388,"mtime":1612294068569,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"lionr3",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/drew/devmountain/unit04/combo-builder-nodb/src/index.js",[],["37","38"],"/Users/drew/devmountain/unit04/combo-builder-nodb/src/App.js",[],"/Users/drew/devmountain/unit04/combo-builder-nodb/src/reportWebVitals.js",[],"/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Main.js",[],"/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Header.js",[],"/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/inputDisplay.js",["39","40","41"],"import React, { Component } from 'react'\n\n\nclass InputDisplay extends Component {\n    constructor() {\n        super();\n    }\n\n    render() {\n        let mappedInputs = this.props.inputs.map(e => {\n            if (e.id > 2) {\n                return (\n                    <div key={this.props.inputs.id} className='inputImages'>\n                        <img\n                            src={e.image}\n                            onClick={() => this.props.addToCombo(e)}\n                        />\n                    </div>\n                )\n            }\n        })\n        return (\n            <div className='InputDisplay'>\n                {mappedInputs}\n            </div>\n        )\n    }\n}\n\nexport default InputDisplay;","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Builder.js",["42"],"function Builder(props) {\n\n    let mappedInputs = props.current.map(e => {\n        return (\n            <div key={props.inputs}>\n                <img src={e.image} className='builderImages'/>\n            </div>\n        )\n    })\n    return (\n        <div className='Builder'>\n            <input \n                type='text' \n                placeholder='Give your combo a name!'\n                onChange={e => props.change(e.target.value)}\n                value={props.currentName}\n                />\n            <div className='display'>\n                {mappedInputs}\n            </div>\n            <div className='saveClearContainer'>\n                {props.editing === 'false' ? \n                <button \n                    disabled={!props.currentName || !props.current}\n                    className='displayButton' \n                    onClick={() => props.save(props.current)}>Save</button>\n                    :\n                    <button\n                        disabled={!props.currentName}\n                        className='displayButton'\n                        onClick={() => props.saveEdits(props.current)}\n                        >Save Edits</button>\n                    \n                    }\n\n                <button className='displayButton' onClick={props.clear}>Clear</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Builder","/Users/drew/devmountain/unit04/combo-builder-nodb/src/Components/Saved.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":5,"nodeType":"49","messageId":"50","endLine":7,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":10,"column":52,"nodeType":"53","messageId":"54","endLine":10,"endColumn":54},{"ruleId":"55","severity":1,"message":"56","line":14,"column":25,"nodeType":"57","endLine":17,"endColumn":27},{"ruleId":"55","severity":1,"message":"56","line":6,"column":17,"nodeType":"57","endLine":6,"endColumn":63},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]